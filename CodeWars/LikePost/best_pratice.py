# Aqui eu defino uma funÃ§Ã£o chamada "likes", que vai receber uma lista chamada "names".
# Essa lista contÃ©m os nomes das pessoas que curtiram (deram like) em alguma publicaÃ§Ã£o.
def likes(names):
    # Primeiro, pego o tamanho da lista, ou seja, quantas pessoas curtiram.
    n = len(names)

    # A ideia dessa funÃ§Ã£o Ã© retornar uma frase diferente dependendo da quantidade de pessoas.
    # Para isso, eu uso um dicionÃ¡rio (que Ã© uma estrutura de chave:valor).
    # Cada chave representa um nÃºmero de curtidas e o valor Ã© a frase correspondente.
    # Assim, posso acessar a frase certa de forma prÃ¡tica.
    return {
        # Caso 0 curtidas â†’ ninguÃ©m curtiu
        0: 'no one likes this',

        # Caso 1 curtida â†’ apenas uma pessoa curtiu, entÃ£o uso o singular "likes"
        1: '{} likes this',

        # Caso 2 curtidas â†’ duas pessoas curtiram, entÃ£o uso o plural "like"
        2: '{} and {} like this',

        # Caso 3 curtidas â†’ trÃªs pessoas curtiram, entÃ£o listo os trÃªs nomes
        3: '{}, {} and {} like this',

        # Caso 4 ou mais curtidas â†’ mostro os dois primeiros nomes e digo quantos "outros" curtiram
        4: '{}, {} and {others} others like this'
    # Aqui vem a parte inteligente:
    # uso min(4, n) para garantir que a chave nunca passe de 4.
    # Exemplo: se tiver 10 pessoas, o min(4, 10) = 4 â†’ usa o formato do caso "4 ou mais".
    }[min(4, n)].format(
        # Agora, preencho os espaÃ§os {} com os primeiros nomes da lista.
        # O operador * desempacota a lista "names[:3]", ou seja, envia atÃ© 3 nomes separadamente.
        *names[:3],

        # Aqui defino o valor do parÃ¢metro "others", que sÃ³ serÃ¡ usado no caso de 4 ou mais curtidas.
        # "others" representa o nÃºmero de pessoas extras alÃ©m das duas primeiras mostradas.
        others=n - 2 if n > 3 else 1
    )

likes(["Enzo", "JoÃ£o", "Pedro", "Davi", "Paulo"])
# ğŸ’¡ Resumindo o raciocÃ­nio:
# - Eu usei um dicionÃ¡rio para escolher rapidamente o formato certo da frase.
# - Usei o mÃ©todo "format" para inserir os nomes nas posiÃ§Ãµes corretas dos {}.
# - E usei o min(4, n) para evitar erros e simplificar a lÃ³gica.
#
# Exemplo prÃ¡tico:
# likes([]) â†’ "no one likes this"
# likes(["Luiz"]) â†’ "Luiz likes this"
# likes(["Luiz", "Maria"]) â†’ "Luiz and Maria like this"
# likes(["Luiz", "Maria", "Ana"]) â†’ "Luiz, Maria and Ana like this"
# likes(["Luiz", "Maria", "Ana", "JoÃ£o", "Pedro"]) â†’ "Luiz, Maria and 3 others like this"
